{
  "name": "tictactoe-api-postman-tests",
  "version": "2.0.0",
  "description": "Postman collection and Newman automation for Tic Tac Toe API testing",
  "scripts": {
    "install:newman": "npm install -g newman newman-reporter-html newman-reporter-htmlextra",
    "test": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --color on",
    "test:dev": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --color on",
    "test:staging": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Staging.postman_environment.json --color on",
    "test:prod": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Production.postman_environment.json --color on",
    "test:legacy": "newman run Tic_Tac_Toe_API.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --color on",
    "test:auth": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Authentication' --color on",
    "test:game": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Game Management' --color on",
    "test:social": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Social Authentication' --color on",
    "test:chat": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Chat System' --color on",
    "test:matchmaking": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Matchmaking' --color on",
    "test:admin": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Admin' --color on",
    "test:health": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --folder 'Health Check' --color on",
    "setup:data": "newman run Test_Data_Setup.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --color on",
    "report:html": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --reporters html --reporter-html-export reports/api-test-report.html",
    "report:json": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --reporters json --reporter-json-export reports/api-test-report.json",
    "report:junit": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --reporters junit --reporter-junit-export reports/api-test-report.xml",
    "report:all": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --reporters html,json,junit --reporter-html-export reports/api-test-report.html --reporter-json-export reports/api-test-report.json --reporter-junit-export reports/api-test-report.xml",
    "report:fancy": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json --reporters htmlextra --reporter-htmlextra-export reports/fancy-report.html",
    "clean:reports": "rimraf reports/*",
    "validate:collection": "newman run Tic_Tac_Toe_API_Complete.postman_collection.json --dry-run",
    "validate:environment": "node -e 'console.log(JSON.parse(require(\"fs\").readFileSync(\"Tic_Tac_Toe_Development.postman_environment.json\")).name)'",
    "docker:test": "docker run --rm -v \"$(pwd):/etc/newman\" -t postman/newman run Tic_Tac_Toe_API_Complete.postman_collection.json -e Tic_Tac_Toe_Development.postman_environment.json",
    "config:test": "newman run --config-file newman-config.json",
    "help": "echo 'Available scripts: test, test:dev, test:staging, test:prod, test:legacy, test:auth, test:game, test:social, test:chat, test:matchmaking, test:admin, test:health, setup:data, report:html, report:json, report:junit, report:all, report:fancy, clean:reports, validate:collection, validate:environment, docker:test, config:test'"
  },
  "keywords": [
    "postman",
    "newman",
    "api-testing",
    "tictactoe",
    "automation",
    "testing",
    "social-auth",
    "matchmaking"
  ],
  "author": "TicTacToe Development Team",
  "license": "MIT",
  "devDependencies": {
    "newman": "^6.0.0",
    "newman-reporter-html": "^1.0.5",
    "newman-reporter-htmlextra": "^1.23.0",
    "rimraf": "^5.0.0"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=7.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/tictactoe-api.git",
    "directory": "backend/postman"
  },
  "bugs": {
    "url": "https://github.com/your-org/tictactoe-api/issues"
  },
  "homepage": "https://github.com/your-org/tictactoe-api#readme"
}
